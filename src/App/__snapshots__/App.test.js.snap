// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Sidebar
          addUser={[Function]}
/>,
        <div
          className="main-container"
>
          <withRouter(Header) />
          <div
                    className="main-display-container"
          >
                    <Routes
                              appState={
                                        Object {
                                                  "addNewStaff": false,
                                                  "admin": false,
                                                  "currentUser": Object {},
                                                  "events": Array [],
                                                  "isCurrentStaff": false,
                                                  "schedule": Array [],
                                                  "staff": Array [],
                                                  "unscheduledEvents": Array [],
                                                }
                              }
                              methods={
                                        Object {
                                                  "addEvent": [Function],
                                                  "addStaff": [Function],
                                                  "deleteFromSchedule": [Function],
                                                  "editSchedule": [Function],
                                                  "scheduleGenerator": [Function],
                                                }
                              }
                    />
          </div>
</div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "addUser": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <withRouter(Header) />,
            <div
              className="main-display-container"
>
              <Routes
                            appState={
                                          Object {
                                                        "addNewStaff": false,
                                                        "admin": false,
                                                        "currentUser": Object {},
                                                        "events": Array [],
                                                        "isCurrentStaff": false,
                                                        "schedule": Array [],
                                                        "staff": Array [],
                                                        "unscheduledEvents": Array [],
                                                      }
                            }
                            methods={
                                          Object {
                                                        "addEvent": [Function],
                                                        "addStaff": [Function],
                                                        "deleteFromSchedule": [Function],
                                                        "editSchedule": [Function],
                                                        "scheduleGenerator": [Function],
                                                      }
                            }
              />
</div>,
          ],
          "className": "main-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Routes
                appState={
                                Object {
                                                "addNewStaff": false,
                                                "admin": false,
                                                "currentUser": Object {},
                                                "events": Array [],
                                                "isCurrentStaff": false,
                                                "schedule": Array [],
                                                "staff": Array [],
                                                "unscheduledEvents": Array [],
                                              }
                }
                methods={
                                Object {
                                                "addEvent": [Function],
                                                "addStaff": [Function],
                                                "deleteFromSchedule": [Function],
                                                "editSchedule": [Function],
                                                "scheduleGenerator": [Function],
                                              }
                }
/>,
              "className": "main-display-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appState": Object {
                  "addNewStaff": false,
                  "admin": false,
                  "currentUser": Object {},
                  "events": Array [],
                  "isCurrentStaff": false,
                  "schedule": Array [],
                  "staff": Array [],
                  "unscheduledEvents": Array [],
                },
                "methods": Object {
                  "addEvent": [Function],
                  "addStaff": [Function],
                  "deleteFromSchedule": [Function],
                  "editSchedule": [Function],
                  "scheduleGenerator": [Function],
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Sidebar
            addUser={[Function]}
/>,
          <div
            className="main-container"
>
            <withRouter(Header) />
            <div
                        className="main-display-container"
            >
                        <Routes
                                    appState={
                                                Object {
                                                            "addNewStaff": false,
                                                            "admin": false,
                                                            "currentUser": Object {},
                                                            "events": Array [],
                                                            "isCurrentStaff": false,
                                                            "schedule": Array [],
                                                            "staff": Array [],
                                                            "unscheduledEvents": Array [],
                                                          }
                                    }
                                    methods={
                                                Object {
                                                            "addEvent": [Function],
                                                            "addStaff": [Function],
                                                            "deleteFromSchedule": [Function],
                                                            "editSchedule": [Function],
                                                            "scheduleGenerator": [Function],
                                                          }
                                    }
                        />
            </div>
</div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addUser": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <withRouter(Header) />,
              <div
                className="main-display-container"
>
                <Routes
                                appState={
                                                Object {
                                                                "addNewStaff": false,
                                                                "admin": false,
                                                                "currentUser": Object {},
                                                                "events": Array [],
                                                                "isCurrentStaff": false,
                                                                "schedule": Array [],
                                                                "staff": Array [],
                                                                "unscheduledEvents": Array [],
                                                              }
                                }
                                methods={
                                                Object {
                                                                "addEvent": [Function],
                                                                "addStaff": [Function],
                                                                "deleteFromSchedule": [Function],
                                                                "editSchedule": [Function],
                                                                "scheduleGenerator": [Function],
                                                              }
                                }
                />
</div>,
            ],
            "className": "main-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Routes
                  appState={
                                    Object {
                                                      "addNewStaff": false,
                                                      "admin": false,
                                                      "currentUser": Object {},
                                                      "events": Array [],
                                                      "isCurrentStaff": false,
                                                      "schedule": Array [],
                                                      "staff": Array [],
                                                      "unscheduledEvents": Array [],
                                                    }
                  }
                  methods={
                                    Object {
                                                      "addEvent": [Function],
                                                      "addStaff": [Function],
                                                      "deleteFromSchedule": [Function],
                                                      "editSchedule": [Function],
                                                      "scheduleGenerator": [Function],
                                                    }
                  }
/>,
                "className": "main-display-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appState": Object {
                    "addNewStaff": false,
                    "admin": false,
                    "currentUser": Object {},
                    "events": Array [],
                    "isCurrentStaff": false,
                    "schedule": Array [],
                    "staff": Array [],
                    "unscheduledEvents": Array [],
                  },
                  "methods": Object {
                    "addEvent": [Function],
                    "addStaff": [Function],
                    "deleteFromSchedule": [Function],
                    "editSchedule": [Function],
                    "scheduleGenerator": [Function],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

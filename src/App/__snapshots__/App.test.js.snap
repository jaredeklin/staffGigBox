// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Sidebar
          addUser={[Function]}
/>,
        <div
          className="main-container"
>
          <withRouter(Header) />
          <div
                    className="main-display-container"
          >
                    <Unknown
                              addEvent={[Function]}
                              addNewStaff={false}
                              addStaff={[Function]}
                              admin={false}
                              currentUser={Object {}}
                              deleteFromSchedule={[Function]}
                              editSchedule={[Function]}
                              events={Array []}
                              isCurrentStaff={false}
                              schedule={Array []}
                              scheduleGenerator={[Function]}
                              staff={Array []}
                              unscheduledEvents={Array []}
                    />
          </div>
</div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "addUser": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <withRouter(Header) />,
            <div
              className="main-display-container"
>
              <Unknown
                            addEvent={[Function]}
                            addNewStaff={false}
                            addStaff={[Function]}
                            admin={false}
                            currentUser={Object {}}
                            deleteFromSchedule={[Function]}
                            editSchedule={[Function]}
                            events={Array []}
                            isCurrentStaff={false}
                            schedule={Array []}
                            scheduleGenerator={[Function]}
                            staff={Array []}
                            unscheduledEvents={Array []}
              />
</div>,
          ],
          "className": "main-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Unknown
                addEvent={[Function]}
                addNewStaff={false}
                addStaff={[Function]}
                admin={false}
                currentUser={Object {}}
                deleteFromSchedule={[Function]}
                editSchedule={[Function]}
                events={Array []}
                isCurrentStaff={false}
                schedule={Array []}
                scheduleGenerator={[Function]}
                staff={Array []}
                unscheduledEvents={Array []}
/>,
              "className": "main-display-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "addEvent": [Function],
                "addNewStaff": false,
                "addStaff": [Function],
                "admin": false,
                "currentUser": Object {},
                "deleteFromSchedule": [Function],
                "editSchedule": [Function],
                "events": Array [],
                "isCurrentStaff": false,
                "schedule": Array [],
                "scheduleGenerator": [Function],
                "staff": Array [],
                "unscheduledEvents": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Sidebar
            addUser={[Function]}
/>,
          <div
            className="main-container"
>
            <withRouter(Header) />
            <div
                        className="main-display-container"
            >
                        <Unknown
                                    addEvent={[Function]}
                                    addNewStaff={false}
                                    addStaff={[Function]}
                                    admin={false}
                                    currentUser={Object {}}
                                    deleteFromSchedule={[Function]}
                                    editSchedule={[Function]}
                                    events={Array []}
                                    isCurrentStaff={false}
                                    schedule={Array []}
                                    scheduleGenerator={[Function]}
                                    staff={Array []}
                                    unscheduledEvents={Array []}
                        />
            </div>
</div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addUser": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <withRouter(Header) />,
              <div
                className="main-display-container"
>
                <Unknown
                                addEvent={[Function]}
                                addNewStaff={false}
                                addStaff={[Function]}
                                admin={false}
                                currentUser={Object {}}
                                deleteFromSchedule={[Function]}
                                editSchedule={[Function]}
                                events={Array []}
                                isCurrentStaff={false}
                                schedule={Array []}
                                scheduleGenerator={[Function]}
                                staff={Array []}
                                unscheduledEvents={Array []}
                />
</div>,
            ],
            "className": "main-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Unknown
                  addEvent={[Function]}
                  addNewStaff={false}
                  addStaff={[Function]}
                  admin={false}
                  currentUser={Object {}}
                  deleteFromSchedule={[Function]}
                  editSchedule={[Function]}
                  events={Array []}
                  isCurrentStaff={false}
                  schedule={Array []}
                  scheduleGenerator={[Function]}
                  staff={Array []}
                  unscheduledEvents={Array []}
/>,
                "className": "main-display-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "addEvent": [Function],
                  "addNewStaff": false,
                  "addStaff": [Function],
                  "admin": false,
                  "currentUser": Object {},
                  "deleteFromSchedule": [Function],
                  "editSchedule": [Function],
                  "events": Array [],
                  "isCurrentStaff": false,
                  "schedule": Array [],
                  "scheduleGenerator": [Function],
                  "staff": Array [],
                  "unscheduledEvents": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
